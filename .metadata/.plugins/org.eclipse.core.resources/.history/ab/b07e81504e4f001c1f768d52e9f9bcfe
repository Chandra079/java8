package functionalInterfaces.beans;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.function.Function;

public class FunctionExample2 {
	public static void main(String[] args) {
		
		//Map of Instructors with name as key and expe as value
		//create Function which will take List<Instructor> as input then return Map.
		
		
		List<Instructor> instructors = Instructors.getAll();
		Map<String, Float> instructorsMap= new HashMap<String,Float>();
		
		Function<List<Instructor>, Map<String, Float>> function1 =instructorss->{
			instructors.forEach(i ->{
				instructorsMap.put(i.getName(),i.getExp() );
			});
			
			return instructorsMap;
		};
		
		Map<String, Float> apply = function1.apply(instructors);
		
		for(Entry<String, Float> mapEntry :apply.entrySet()) {
			System.out.println(mapEntry.getKey() +" "+mapEntry.getValue() );
		}
		
		System.out.println("---------------");
		System.out.println(function1.apply(instructors));
		
		
	}
}
